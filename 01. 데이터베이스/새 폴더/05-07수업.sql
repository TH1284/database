SELECT * FROM KOPO_PRODUCT_VOLUME
WHERE 1=1
AND PRODUCTGROUP = 'ST0001'
AND VOLUME < 3000

EDIT KOPO_PRODUCT_VOLUME



SELECT PRODUCTGROUP
    FROM KOPO_PRODUCT_VOLUME
    
    
CREATE TABLE
    KOPO_PRODUCT_VOLUME_HK AS
SELECT * FROM KOPO_PRODUCT_VOLUME

SELECT * FROM KOPO_PRODUCT_VOLUME_HK  
UNION ALL  --중복데이터를 전부 보여줌
SELECT * FROM KOPO_PRODUCT_VOLUME

SELECT * FROM KOPO_PRODUCT_VOLUME_HK
UNION       --중복된 데이터는 한번만 보여준다
SELECT * FROM KOPO_PRODUCT_VOLUME

EDIT KOPO_PRODUCT_VOLUME


SELECT *FROM TABS

SELECT A.*
    , '2019_배치프로그램' AS PLANID --컬럼 추가
    FROM KOPO_PRODUCT_VOLUME A -- 테이블은 A로 나타낼수 있다.
    
    

SELECT A.*
    , 'LED_TV'||'_'||A.PRODUCTGROUP AS PLANID --컬럼 추가
    FROM KOPO_PRODUCT_VOLUME A -- 테이블은 A로 나타낼수 있다.


SELECT
    DISTINCT REGIONID, PRODUCTGROUP
FROM KOPO_PRODUCT_VOLUME

ALTER TABLE KOPO_PRODUCT_VOLUME RENAME COLUMN PRODUCTGROUP TO PRIDUCT--컬럼명 변경

SELECT * FROM KOPO_PRODUCT_VOLUME

ALTER TABLE KOPO_PRODUCT_VOLUME RENAME COLUMN PRIDUCT TO PRODUCTGROUP


CREATE DATABASE LINK ASUS_LINK
CONNECT TO kopo
IDENTIFIED BY kopo
Using 'tns설정명'

 
CREATE DATABASE LINK ASUS_LINK
CONNECT TO kopo
IDENTIFIED BY kopo
Using '(
DESCRIPTION=
    (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.0.18)(PORT=1521))
    (CONNECT_DATA=
        (SERVER=DEDICATED)
        (SERVICE_NAME=XE)
    )
)'
     


(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)
(HOST = 192.168.110.112)(PORT = 1521))
(CONNECT_DATA = (SERVER = DEDICATED)(SERVICE_NAME = orcl)
))

DROP DATABASE LINK ASUS_LINK;

SELECT * FROM ALL_DB_LINKS


CREATE TABLE KOPO_PRODUCT_VOLUME
AS SELECT * FROM KOPO_PRODUCT_VOLUME@ASUS_LINK

SELECT * FROM KOPO_PRODUCT_VOLUME@ASUS_LINK


CREATE DATABASE LINK ASUS_LINK
CONNECT TO 
IDENTIFIED BY 
Using

select * from tabs@ASUS_LINKS8


CREATE DATABASE LINK ASUS_LINKS8
CONNECT TO kopo
IDENTIFIED BY kopo
Using 'DEV_KOPO'
 
DRO

SELECT * FROM KOPO_PRODUCT_VOLUME@ASUS_LINK8
 